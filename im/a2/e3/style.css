nav ol li a {
  color: var(--col-01);
  text-decoration: none;
  cursor: default;
}

#mode-button{
  background-color: transparent;
  border: 0;
  color: var(--col-01);
  text-decoration: none;
  cursor: default;
}


/*
  This one CSS file is imported into both index.html AND hosono.html so you need to be careful that it 
  works for both.
*/

*{
  box-sizing: border-box;
  background-origin: border-box;
  margin: 0;
}

:root{
  /* first two colours come from Kuroi's Manga Pallete Palette */
  /* https://lospec.com/palette-list/manga-pallete */
  --col-01:#171219;
  --col-02:#f2fbeb;
  --col-03:#528cff;
  --col-04:#b6e878;
  font-size: 16px;
  /* scroll behaviour makes the <a> links to ids scroll to position over time rather than immediately */
  scroll-behavior: smooth;
}
 
/* the use of smooth scroll also creates a visual indicator that the site is working and going to the correct section when a heading link is clicked. this also shows
the user where the content is located on the page whether it is far down the page or nearer to the top. */

body{
  padding: 1rem;
  background-color: var(--col-02);
  color: var(--col-01);
  transition: 0.5s;
}

/* I added the trainstion time of 0.5 seconds as it seemed like a fast enough transition time but also did not blind the user, making it an easy transtion time to look at. 
this transition time lets the swap between dark mode and light mode effective and is a very clear indicator as to what it does too because of this time. the use of 
a button which lets the user change between light and dark mode is an example of user agency over the site and allows for a better catered user experince. */

nav {
  margin-top: 1rem;
}

nav li{
  font-size: 1rem;
}

section{
  margin-bottom: 2rem;
}

h1{
  font-size: 3rem;
}

h2{
  font-size: 2rem;
}

p{
  font-size: 1rem;
  margin-top: 1rem;
}

figcaption{
  width: fit-content;
}

dl ul{
  margin-bottom: 0;
}

li{
  font-size: 1rem;
}

li:hover{
  cursor: pointer;
  border-radius: 25px;
}

/* above is code which changes the cursor to a pointer when you hover over the headings to show that they can be clicked and interacted with. this is done to show the user
that not only can this be clicked but there will be feedback when the link is clicked in the form of the website scrolling down the page. if not, the user may be
unsure of what can and cannot be clicked, leading to a confusing and unclear heading format. */

li a:hover{
  cursor: pointer;
  color: rgb(90, 90, 90);
  background-color: rgb(216, 216, 216);
  border-radius: 25px;
  padding: 0.25%;
}

/* above is css which allows for changes in the titles to change when you hover over the titles. this is done to make it clear that you can click them.
a border apears around them showing they are buttons as well as the cursor changing to a pointer and the text changing color. I decided to not have anything happen when
you click the text as the page scrolls */

a{
  transition: 0.5s;
}
 /* I also put the transtiton time here too so the text in the headings transitions at the same time as the rest of the text. otherwise it changed imediately which can
 be jarring to the user and does not create a very good sense of unity with the rest of the website. */

dd{
  padding-left: 60px;
}

li ul{
  padding-left: 40px;
}

.img-wrapper{
  width: 100%;
  margin-bottom: 1.5rem;
}

.img-figure{
  display: flex;
  flex-direction: column;
  align-items: center;
}

.article-img{
  width: 80%;
}

.res-columns{
  column-width: 25rem;
}

#mode-button{
  float: right;
  /* note the use of position: sticky to keep the button on the page even with scrolling */
  position: sticky;
  top: 1rem;
}

#mode-button:hover{
  cursor: pointer;
  background-color: rgb(143, 143, 143);
  border-radius: 25px;
}

/* above is code to change the background colour of the button to a colour which stands out from the background to create a clear distiction between what is a button
and what is the background. this also draws the users eye towards the button and makes it clear that it is something that can be interacted wtih. the text inside the
button also tells the user what the button does rather than simply having a blank button which could do anything to the site from the users' point of view. 
In terms of the colour choice, i chose this grey as it works as a middle ground between the black and white backgronds which change between dark and light mode
respectively. this allows for the text to also stand out whether it is black or white and this colour also goes well with the theme of the site, thus creating unity
between the button and website.*/

/* code for loading page */

#load-body{
  height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}
/* changing button to look like a link */
#load-link{
  line-height: 1rem;
  background-color: transparent;
  border: 0;
  cursor: pointer;
  border-radius: 25px;
}

/* this above also turns the cursor into a pointer to show the user that this can be clicked and will do something when it is clicked, similarly to the other interactive
links on the site. */

#load-link:hover{
color: rgb(90, 90, 90);
background-color: rgb(205, 205, 205);
}

/* This here makes it so when you hover ove the text to go to the site it makes a button apear which is then clearer to click. it also changes the cursor to a pointer
as you can see in the load-link tag above which futher makes it clear that the button can be clicked */ 

/* throbber while page is fake loading */
#load-throbber{
  /* the width, height and background-color give it a shape on the page without any content inside - 
  these value are arbitrary, please change to create your own design  */
  width: 25%;
  height: 1rem;
  background-color: var(--col-03);
  /* we also initially set display to none so it only shows once the link is clicked */
  display: none;
  border-radius: 25px;
  background-image: linear-gradient(90deg, red 5%, orange 10%, yellow 15%, greenyellow 20%, rgb(42, 253, 42) 25%, rgb(0, 255, 213) 30%, rgb(0, 110, 255) 35%, rgb(25, 0, 255) 40%, rgb(217, 0, 255) 45%, rgb(255, 55, 139) 50%, red 55%, orange 60%, yellow 65%, greenyellow 70%, rgb(42, 253, 42) 75%, rgb(0, 255, 213) 80%, rgb(0, 110, 255) 85%, rgb(25, 0, 255) 90%, rgb(217, 0, 255) 95%, rgb(255, 55, 139) 100%);
  background-size: 1000%;
  animation: rotate 10.1s;
}

@keyframes rotate {
  0% {
    background-position-x: 0%;
  }
  100% {
    background-position-x: 100%;
  }
}

/* above are some details about what happens when you click the button to take you to the next site. first a rainbow loading bar apears which using the different 
gradients and keyframes makes the color scroll horizontally implying that there is progress loading the site. I chose to make the throbber be a horizontal loading
bar as it is a common form that a loading bar takes, making it clear to the user what it is.  I also made the animation go for 10.1 seconds rather
than the 10 seconds it takes to move onto the next slide so the throbber does not disapear or restart before the next slide apears. this was all done to imply that
the page was loading when in reality it was simply waiting to load the next page. creating the loading bar allows for some visual indication for the user and also
creates a distraction while the site is 'loading' rather than nothing happening. if there was nothing happening, the user may click off the site or reload it because
they may think that something has gone wrong or that the button does nothing. */

/* Media Queries */

/* medium devices 600 - 992 */
@media only screen and (min-width: 600px) {
  :root{
    font-size: 20px;
  }
  
  .img-wrapper{
    width: 75%;
    margin: 1.5rem auto;
  }

}

/* medium devices 992 + */
@media only screen and (min-width: 992px) {
  :root{
    font-size: 24px;
  }

  .img-wrapper{
    max-width: fit-content;
    float: right;
    margin: 1.5rem;
  }

}

@media (prefers-reduced-motion) {
  :root{
    scroll-behavior: auto;
  }
}